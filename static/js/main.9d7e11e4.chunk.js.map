{"version":3,"sources":["components/Statistics.js","components/Section.js","components/Notification.js","components/FeedbackOptions.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","name","onClick","Feedback","state","handleChange","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAGe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,MCbS,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,iCACE,4BAAKD,GACJC,GCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,2BAAIA,GCDE,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,oCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,4BACEC,IAAKD,EACLE,KAAK,SACLC,KAAMH,EACNI,QAASN,GAERE,O,ICPUK,E,4MACnBC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,aAAe,SAACC,GACd,IAAML,EAAOK,EAAEC,OAAON,KACtB,EAAKO,UAAS,SAACJ,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBH,EAAO,EAAKG,MAAMH,GAAQ,Q,EAGnEQ,mBAAqB,WAA0C,IAAD,yDAAf,EAAKL,MAA5BpB,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IACrC,OAAOF,EAAOC,EAAUC,G,EAE1BwB,gCAAkC,WAA4B,IAAD,yDAAf,EAAKN,MAAdpB,EAAwB,EAAxBA,KACnC,OAAOA,EAAO2B,KAAKC,MAAc,IAAP5B,EAAc,EAAKyB,sBAAwB,G,uDAG7D,IAAD,EACwBI,KAAKT,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,yDACA,kBAACG,EAAD,CAASC,MAAM,wBACb,kBAACI,EAAD,CACEC,QAASmB,OAAOC,KAAKF,KAAKT,OAC1BR,gBAAiBiB,KAAKR,gBAGzBQ,KAAKJ,qBACJ,kBAACpB,EAAD,CAASC,MAAM,cACb,kBAACP,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKJ,qBACZrB,mBAAoByB,KAAKH,qCAI7B,kBAAClB,EAAD,CAAcC,QAAQ,2B,GAzCMuB,aCFtCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9d7e11e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\n\nexport default class Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChange = (e) => {\n    const name = e.target.name;\n    this.setState((state) => ({ ...state, [name]: this.state[name] + 1 }));\n  };\n\n  countTotalFeedback = ({ good, neutral, bad } = this.state) => {\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = ({ good } = this.state) => {\n    return good ? Math.round((good * 100) / this.countTotalFeedback()) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <h1>Welcome to cafe Expresso!</h1>\n        <Section title=\"Please live feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleChange}\n          />\n        </Section>\n        {this.countTotalFeedback() ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}